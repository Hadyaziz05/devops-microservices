pipeline {
    agent {
        node {
            label 'jenkins-docker-agent'
        }
    }

    triggers {
        pollSCM 'H/5 * * * *'
    }

    environment {
        TAG = "v${env.BUILD_NUMBER}"
        IMAGE = "hadyaziz05/frontend:${TAG}"
        DOCKER_HOST = 'tcp://docker-socat:2375'
    }

    stages {
        stage('Check for [skip ci]') {
            steps {
                script {
                    def commitMessage = sh(
                        script: "git log -1 --pretty=%B",
                        returnStdout: true
                    ).trim()
                    
                    if (commitMessage.contains("[skip ci]")) {
                        echo "Skipping build: Detected '[skip ci]' in commit message."
                        currentBuild.result = 'SUCCESS'
                        error("Build intentionally skipped.")
                    }
                }
            }
        }

        stage('Build') {
            steps {
                echo "Building Docker Image: ${IMAGE}"
                sh '''
                docker build -t $IMAGE frontend/
                '''
            }
        }

        stage('Test') {
            steps {
                echo "Running container test..."
                sh '''
                docker run --rm $IMAGE serve --version
                '''
            }
        }

        stage('Push Image') {
            steps {
                echo "Pushing image to Docker Hub..."
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                    sh '''
                    echo "$PASS" | docker login -u "$USER" --password-stdin
                    docker push $IMAGE
                    '''
                }
            }
        }

        stage('Update YAML in Git') {
            steps {
                echo "Updating frontend-deployment.yaml with image: ${IMAGE}"
                withCredentials([usernamePassword(credentialsId: 'git-creds', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASS')]) {
                    sh '''
                    git config user.name "jenkins"
                    git config user.email "jenkins@ci"

                    rm -rf repo
                    git clone https://$GIT_USER:$GIT_PASS@github.com/Hadyaziz05/devops-microservices.git repo
                    cd repo

                    # update deployment YAML
                    sed -i "s|image: .*|image: hadyaziz05/frontend:${TAG}|" k8s/frontend-deployment.yaml

                    git add k8s/frontend-deployment.yaml
                    git commit -m "[skip ci] Update frontend image to ${TAG}" || echo "No changes"
                    git push origin main
                    '''
                }
            }
        }
    }
}
